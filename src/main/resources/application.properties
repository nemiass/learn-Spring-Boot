
server.port=8080
# Config Database
spring.jpa.database=postgresql
# true, para tener modo depuracion en la consola
spring.jpa.show-sql=true
# jpa usa hinernate, asi que para ahcer alguna configuracion en bd, debemos configurar el hibernate con que
# trabaja jpa, le ponemos el true, para indicar que va crear las entidades en la bd, y cuando estws se cambien,
# o agreguen un nuevo campo, tambi�n se actualizar�n en la tabla de la BD, se pone "update" en desarrollo
# y "none" en produccion
spring.jpa.hibernate.ddl-auto=update
# Hibernate ddl auto (create, create-drop, validate, update)
# De la dependencia de prostgresql, de su paquete org.postgresql, llamamos a la clase driver
# para que se conecte con la BD
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/mediappbd
spring.datasource.username=postgres
spring.datasource.password=admin

# lo primero que se inicia es el CORS, luego el spring security y como tercero le estamos colocando a oayth2, por eso
# el filter-order=3, para que luego no haya conflictos con los otros
security.oauth2.resource.filter-order=3

#https://github.com/nydiarra/springboot-jwt -> guia de referencia que usa el curso
# EStas configuraciones son para poder crear nuestros tokes
# singning-key -> firma del token
security.signing-key=MaYzkSjmkzPC57L
# le indicamos la logintud del encode de nuestro JWT, es un numero que va de la mano con la firma anterior, NOTA:
# investigar formas para proteget JWT
security.encoding-strength=256
# Esto solo es el nombre que le vamos a poner
security.security-realm=Spring Boot JWT


# Esto es para el mecanismo de logueo
# el client id es como nuestra aplicacion se identifica
security.jwt.client-id=mitomediapp
# El client secret es una clave por defecto a esta aplicacion
security.jwt.client-secret=mito89codex
# con grant-type indicamos que el logueo va ser mediante tokenss
security.jwt.grant-type=password
# los scopers nos permiten indicar que vamos a permitir la lectura y escritura de nuestros proyectos
security.jwt.scope-read=read
security.jwt.scope-write=write
# El resource-ids, es el namespace de toda nuestra configuracion
security.jwt.resource-ids=mitoresourceid
